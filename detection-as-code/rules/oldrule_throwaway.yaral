rule oldrule_throwaway {

  meta:
    author = "Google Cloud Security (Generated by Cline)"
    description = "Detects execution of .rdp files from Outlook temporary cache locations, a TTP associated with UNC5837 (Midnight Blizzard/Earth Koshchei)."
    rule_id = "mr_A5B9F5C1-8D7E-4F6A-B3C2-9A0D1E8F7C6B" // Example UUID
    rule_name = "SuspiciousRDPExecutionFromOutlookCache-elevate25"
    tactic = "TA0002" // Execution
    technique = "T1204.002" // Malicious File
    platform = "Windows"
    data_source = "Microsoft Windows Events, EDR"
    severity = "High"
    priority = "High"
    reference = "https://www.virustotal.com/gui/collection/report--25-10015981" // Link to the GTI report

  events:
    // Event for process launch
    $e.metadata.event_type = "PROCESS_LAUNCH"

    // Check if mstsc.exe is launched
    // $e.principal.process.file.full_path might be mstsc.exe if it's the direct launch
    // $e.target.process.file.full_path could also be mstsc.exe
    // Let's assume the .rdp file itself is the target, and mstsc.exe is the handler invoked by the OS,
    // or mstsc.exe is launched with the .rdp file as an argument.
    // The GTI report implies the .rdp file is "executed".
    // A safer bet is to look for mstsc.exe in command line with .rdp from suspicious path.
    (
      // mstsc.exe is the process being launched, with the .rdp file in its command line
      (
        re.regex($e.principal.process.file.full_path, /mstsc\.exe$/) nocase or
        re.regex($e.target.process.file.full_path, /mstsc\.exe$/) nocase // Depending on EDR field population for parent/child
      )
      and
      (
        // Regex for Outlook INetCache path
        re.regex($e.principal.process.command_line, /\\AppData\\Local\\Microsoft\\Windows\\(INetCache|Temporary Internet Files)\\Content\.Outlook\\[A-Z0-9]{8}\\[^\\]+\.rdp/) nocase or
        // Regex for Outlook Packages path
        re.regex($e.principal.process.command_line, /\\AppData\\Local\\Packages\\Microsoft\.Outlook_[a-zA-Z0-9]{1,50}\\.{0,120}\\[^\\]+\.rdp/) nocase or
        // Regex for Outlook Olk Attachments path
        re.regex($e.principal.process.command_line, /\\AppData\\Local\\Microsoft\\Olk\\Attachments\\([^\\]+\\){0,5}[^\\]+\.rdp/) nocase
      )
    ) or (
      // OR: The .rdp file itself is listed as the process being launched (target.process)
      // and its path matches one of the suspicious locations.
      re.regex($e.target.process.file.full_path, /\.rdp$/) nocase and
      (
        re.regex($e.target.process.file.full_path, /\\AppData\\Local\\Microsoft\\Windows\\(INetCache|Temporary Internet Files)\\Content\.Outlook\\[A-Z0-9]{8}\\[^\\]+\.rdp$/) nocase or
        re.regex($e.target.process.file.full_path, /\\AppData\\Local\\Packages\\Microsoft\.Outlook_[a-zA-Z0-9]{1,50}\\.{0,120}\\[^\\]+\.rdp$/) nocase or
        re.regex($e.target.process.file.full_path, /\\AppData\\Local\\Microsoft\\Olk\\Attachments\\([^\\]+\\){0,5}[^\\]+\.rdp$/) nocase
      )
    )

  outcome:
    $risk_score = 85
    $principal_hostname = array_distinct($e.principal.hostname)
    $principal_user_userid = array_distinct($e.principal.user.userid)
    $principal_process_command_line = array_distinct($e.principal.process.command_line)
    $principal_process_file_full_path = array_distinct($e.principal.process.file.full_path)
    $principal_process_pid = array_distinct($e.principal.process.pid)
    $target_process_command_line = array_distinct($e.target.process.command_line)
    $target_process_file_full_path = array_distinct($e.target.process.file.full_path)
    $target_process_pid = array_distinct($e.target.process.pid)
    $event_count = count_distinct($e.metadata.id)

  condition:
    $e
}
