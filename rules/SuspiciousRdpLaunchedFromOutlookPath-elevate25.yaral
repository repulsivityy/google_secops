/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
rule SuspiciousRdpLaunchedFromOutlookPath_elevate25 {
  meta:
    author = "Google Threat Intelligence Group"
    description = "Detects RDP connections (mstsc.exe) potentially initiated by a malicious .rdp file launched from a suspicious Outlook temporary/cache path."
    rule_id = "mr_d2b1e0a9-f8c7-4654-3210-987654fedcba" // Please replace with a unique UUIDv4
    rule_name = "SuspiciousRdpLaunchedFromOutlookPath_elevate25"
    tactic = "TA0001" // Initial Access
    technique = "T1566.001" // Phishing: Spearphishing Attachment
    type = "alert"
    data_source = "microsoft sysmon, microsoft windows events, EDR"
    severity = "High"
    priority = "High"
    platform = "Windows"

  events:
    // Process launch event for mstsc.exe
    $proc.metadata.event_type = "PROCESS_LAUNCH"
    re.regex($proc.principal.process.file.full_path, `mstsc\.exe$`) nocase
    // Capture .rdp file path from Outlook cache/temp locations from command line
    $rdp_path_placeholder = re.capture($proc.principal.process.command_line, `(?i)(?:\\AppData\\Local\\Microsoft\\Windows\\(?:INetCache|Temporary Internet Files)\\Content\\.Outlook\\[A-Z0-9]{8}\\[^\\]{1,255}\.rdp|\\AppData\\Local\\Packages\\Microsoft\\.Outlook_[a-zA-Z0-9]{1,50}\\.{0,120}\\[^\\]{1,80}\.rdp|\\AppData\\Local\\Microsoft\\Olk\\Attachments\\(?:[^\\]{1,50}\\){0,5}[^\\]{1,80}\.rdp)`)
    $rdp_path_placeholder != "" // Ensure an RDP path was captured

    // Define placeholders for match section
    $match_principal_hostname = $proc.principal.hostname

    // Network connection event for the RDP session
    $net.metadata.event_type = "NETWORK_CONNECTION"
    $net.target.port = 3389
    // Join with the process event
    $net.principal.process.product_specific_process_id = $proc.principal.process.product_specific_process_id
    $net.principal.hostname = $proc.principal.hostname // Ensure same host

    // Define placeholder for match section
    $match_target_ip = $net.target.ip

  match:
    $match_principal_hostname,
    $match_target_ip,
    $rdp_path_placeholder
    over 10m

  outcome:
    $risk_score = 85
    $principal_hostname = array_distinct($proc.principal.hostname)
    $principal_user_id = array_distinct($proc.principal.user.userid)
    $principal_process_pid = array_distinct($proc.principal.process.pid)
    $principal_process_path = array_distinct($proc.principal.process.file.full_path)
    $principal_process_command_line = array_distinct($proc.principal.process.command_line)
    $rdp_file_path_invoked = array_distinct($rdp_path_placeholder)
    $target_ip = array_distinct($net.target.ip)
    $target_port = array_distinct($net.target.port)

  condition:
    $proc and $net
}